{"ast":null,"code":"var fetchedReducer = function fetchedReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"dataFetched\":\n      return action.payload.fetched;\n\n    default:\n      return state;\n  }\n};\n\nexport default fetchedReducer;","map":{"version":3,"sources":["/Users/sahirali/Tech-Stack/SYNTAX/postcode-map-visualisation/src/reducers/fetched.ts"],"names":["fetchedReducer","state","action","type","payload","fetched"],"mappings":"AAEA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,GAAmD;AAAA,MAAlDC,KAAkD,uEAAjC,KAAiC;AAAA,MAA1BC,MAA0B;;AACxE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAOD,MAAM,CAACE,OAAP,CAAeC,OAAtB;;AACF;AACE,aAAOJ,KAAP;AAJJ;AAMD,CAPD;;AASA,eAAeD,cAAf","sourcesContent":["import { FetchedAction } from \"../types\";\n\nconst fetchedReducer = (state: boolean = false, action: FetchedAction) => {\n  switch (action.type) {\n    case \"dataFetched\":\n      return action.payload.fetched;\n    default:\n      return state;\n  }\n};\n\nexport default fetchedReducer;\n"]},"metadata":{},"sourceType":"module"}