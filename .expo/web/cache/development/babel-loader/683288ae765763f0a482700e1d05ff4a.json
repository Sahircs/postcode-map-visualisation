{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sahirali/Tech-Stack/SYNTAX/postcode-map-visualisation/src/components/MapPage.tsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport MapView, { PROVIDER_GOOGLE, Marker } from \"react-native-maps\";\n\nvar MapPage = function MapPage() {\n  useEffect(function () {\n    fetch(\"https://raw.githubusercontent.com/sjwhitworth/london_geojson/master/london_postcodes.json\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      var stuff = data.features;\n    });\n  }, []);\n  var data = new Map();\n  data.set(\"NW\", [{\n    coords: {\n      latitude: 51.49493,\n      longitude: 0.14619\n    },\n    title: \"LDN\",\n    description: \"Buckingham Palace\",\n    pinColor: \"dodgerblue\"\n  }, {\n    coords: {\n      latitude: 51.49493,\n      longitude: -0.54519\n    },\n    title: \"LDN\",\n    description: \"description2...\",\n    pinColor: \"yellow\"\n  }, {\n    coords: {\n      latitude: 51.49493,\n      longitude: -0.19919\n    },\n    title: \"LDN\",\n    description: \"description3...\",\n    pinColor: \"green\"\n  }]);\n  var markerData = data.get(\"NW\");\n\n  var _useState = useState({\n    latitude: 51.507351,\n    longitude: -0.127758,\n    latitudeDelta: 0.715,\n    longitudeDelta: 0.7121\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      centerPointZoom = _useState2[0],\n      setCenterPointZoom = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Map Page\"), React.createElement(View, {\n    style: styles.separator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Change Focus & Zoom\",\n    onPress: function onPress() {\n      return setCenterPointZoom({\n        latitude: 51.49493,\n        longitude: -0.19919,\n        latitudeDelta: 0.315,\n        longitudeDelta: 0.3121\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.mapContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, React.createElement(MapView, {\n    provider: PROVIDER_GOOGLE,\n    style: styles.map,\n    region: centerPointZoom,\n    zoomEnabled: true,\n    zoomTapEnabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, markerData == null ? void 0 : markerData.map(function (markerObj, index) {\n    return React.createElement(Marker, {\n      key: \"\" + index,\n      coordinate: markerObj.coords,\n      title: markerObj.title,\n      description: markerObj.description,\n      pinColor: markerObj.pinColor,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    });\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\",\n    backgroundColor: \"blue\"\n  },\n  mapContainer: {\n    height: 400,\n    width: \"100%\"\n  },\n  map: {\n    flex: 1\n  }\n});\nexport default MapPage;","map":{"version":3,"sources":["/Users/sahirali/Tech-Stack/SYNTAX/postcode-map-visualisation/src/components/MapPage.tsx"],"names":["React","useEffect","useState","TouchableOpacity","MapView","PROVIDER_GOOGLE","Marker","MapPage","fetch","then","response","json","data","stuff","features","Map","set","coords","latitude","longitude","title","description","pinColor","markerData","get","latitudeDelta","longitudeDelta","centerPointZoom","setCenterPointZoom","styles","container","separator","mapContainer","map","markerObj","index","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","marginVertical","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, Text, StyleSheet, Button } from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../reducers\";\nimport MapView, { PROVIDER_GOOGLE, Geojson, Marker } from \"react-native-maps\";\n\ninterface MarkerData {\n  coords: {\n    latitude: number;\n    longitude: number;\n  };\n  title: string;\n  description: string;\n  pinColor: string;\n}\n\ninterface CenterPointZoom {\n  latitude: number;\n  longitude: number;\n  latitudeDelta: number;\n  longitudeDelta: number;\n}\n\nconst MapPage = () => {\n  useEffect(() => {\n    // App.tsx ???\n    fetch(\n      \"https://raw.githubusercontent.com/sjwhitworth/london_geojson/master/london_postcodes.json\"\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        const stuff = data.features;\n        // for (let i = 0; i < stuff.length; i++) {\n        //   console.log(stuff[i].geometry.coordinates[0].length);\n        // }\n      });\n  }, []);\n\n  let data = new Map<string, MarkerData[]>();\n  data.set(\"NW\", [\n    {\n      coords: { latitude: 51.49493, longitude: 0.14619 },\n      title: \"LDN\",\n      description: \"Buckingham Palace\",\n      pinColor: \"dodgerblue\",\n    },\n    {\n      coords: { latitude: 51.49493, longitude: -0.54519 },\n      title: \"LDN\",\n      description: \"description2...\",\n      pinColor: \"yellow\",\n    },\n    {\n      coords: { latitude: 51.49493, longitude: -0.19919 },\n      title: \"LDN\",\n      description: \"description3...\",\n      pinColor: \"green\",\n    },\n  ]);\n\n  const markerData = data.get(\"NW\");\n\n  const [centerPointZoom, setCenterPointZoom] = useState<CenterPointZoom>({\n    latitude: 51.507351,\n    longitude: -0.127758,\n    latitudeDelta: 0.715,\n    longitudeDelta: 0.7121,\n  });\n\n  return (\n    <View style={styles.container}>\n      <Text>Map Page</Text>\n      <View style={styles.separator} />\n      <TouchableOpacity>\n        <Button\n          title=\"Change Focus & Zoom\"\n          onPress={() =>\n            setCenterPointZoom({\n              latitude: 51.49493,\n              longitude: -0.19919,\n              latitudeDelta: 0.315,\n              longitudeDelta: 0.3121,\n            })\n          }\n        />\n      </TouchableOpacity>\n      {/* Search Bar goes here.. */}\n      <View style={styles.mapContainer}>\n        <MapView\n          provider={PROVIDER_GOOGLE}\n          style={styles.map}\n          region={centerPointZoom}\n          zoomEnabled\n          zoomTapEnabled\n        >\n          {/* Display Markers */}\n          {/* <Marker\n            // key=\"map-key1\"\n            coordinate={{ latitude: 51.49493, longitude: -0.14619 }}\n            title=\"LDN\"\n            description=\"Buckingham Palace\"\n            pinColor=\"dodgerblue\"\n          /> */}\n          {markerData?.map((markerObj, index) => {\n            return (\n              <Marker\n                key={`${index}`}\n                coordinate={markerObj.coords}\n                title={markerObj.title}\n                description={markerObj.description}\n                pinColor={markerObj.pinColor}\n              />\n            );\n          })}\n        </MapView>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\",\n    backgroundColor: \"blue\",\n  },\n  mapContainer: {\n    // flex: 1,\n    height: 400,\n    width: \"100%\",\n    // justifyContent: \"flex-end\",\n    // alignItems: \"center\",\n  },\n  map: {\n    // ...StyleSheet.absoluteFillObject,\n    flex: 1,\n  },\n});\n\nexport default MapPage;\n"]},"metadata":{},"sourceType":"module"}